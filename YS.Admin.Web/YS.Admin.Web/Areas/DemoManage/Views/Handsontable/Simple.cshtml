@using YS.Admin.Util
@{
    Layout = "~/Areas/System/Views/Shared/_Index.cshtml";
}
@* 引入Handsontable *@
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header {
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/Handsontable/dist/handsontable.full.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/Handsontable/dist/handsontable.full.min.js"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/Handsontable/dist/languages/zh-CN.js"))
}

<style>
    .readonly-row {
        background-color: #000;
    }
</style>

<div class="container-div">
    
    <div class="col-sm-24   table-striped">
        <div id="DataTableExcelEdit" style="width: 100%;background-color:white"></div>
        <div class="fixed-table-pagination" id="pagination-info-Panel" style="background-color:white">
            <div class="pull-left pagination-detail">
                <span class="pagination-info">
                    显示第
                    <span id="start-count">0</span>
                    到第
                    <span id="end-count">0</span>
                    条记录，总共
                    <span id="total-count">0</span>
                    条记录
                </span>
                <span class="page-list">
                    每页显示
                    <input id="pageSize" col="PageSize" type="text" style="width:50px" value="15" onblur="pageSizeChange()" />
                    条记录
                </span>
            </div>
            <div class="pull-right pagination" id="pagination-container">
                <ul class="pagination" id="pagination">
                </ul>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    $(function () {
        filterNowData();
         

    });
    var pageData, filterPage, currentPageData = [];
    var totalPages = 1; // 总页数
    var currentPage = 1; // 当前页码
    var pageSize = 15; // 页大小
    var startCount = 0;//本页开始条目
    var totalCount = 0;//总共数据量
    var endCount = 0;//本页结束条目

    function pageSizeChange() {
        if (isNaN($("#pageSize").val())) {
            ys.msgError("请输入数字");
            return;
        }

        pageSize = $("#pageSize").val();
        //渲染分页
        currentPage = 1;
        totalPages = Math.ceil(totalCount / pageSize); // 总页数
        filterNowData();

    }


    var container = document.getElementById('DataTableExcelEdit');
    var hot = new Handsontable(container, {
        colHeaders: true,
        columns: [{ data: 0, title: '', type: 'checkbox' }, { data: 'Index', title: '序号', readOnly: true }, { data: 'CustomerName', title: '姓名' }, { data: 'IDCode', title: '鉴定编号', readOnly: true }, { data: 'CollectionYear', title: '年份' }, { data: 'CollectionValue', title: '面值' }, { data: 'CollectionName', title: '藏品名称' }, { data: 'PrintArt', title: '印刷工艺' }, { data: 'SerialCode', title: '冠字编号' }, { data: 'Rating', title: '评分' }, { data: 'HQP', title: 'HQP', type: 'dropdown', source: ['是', '否'] }, { data: 'StarTag', title: '三星' }, { data: 'EditionPersonalization', title: '版别/个性化' }, { data: 'EstimatedValue', title: '估值保价' }, { data: 'Rarity', title: '珍稀度' }, { data: 'IssuingUnit', title: '发行单位' }, { data: 'AppraiserName', title: '鉴定师', type: 'dropdown', source: ['马龙', '马周明', '丁旭', '马云峰', '任欣', '郭晓维', '郏初辉', '杨国军'] }, { data: 'BigDataTag', title: '大数据标志', type: 'dropdown', source: ['第一套人民币', '第二套人民币', '第三套人民币', '第四套人民币', '第五套人民币', '纪念钞', '民国纸币', '外国纸币'] }, { data: 'PrintStyleName', title: '自定义模板', type: 'dropdown', source: ['纸币190*28mm', '硬币46x24mm', '邮票46x24mm', '硬币78x28MM', '纸币160*27mm', '李丽丽', '李丽丽'] }, { data: 'TagTypeName', title: '标签类型', type: 'dropdown', source: ['78x28MMOS', '78x28MM', '46x24MMOS', '46x24MM', '160*27MM', '190*27MM', '邮票46x24MM', '邮票46x24MMOS', '邮票190*27MM', '邮票160*27MM'] }],
        height: 380,
        data: [],
        manualColumnMove: true,
        manualColumnResize: true, // 启用手动调整列宽
        contextMenu: true,
        width: '100%',
        stretchH: 'all',
        afterGetColHeader: function (col, TH) {
            if (col === 0) { // 为第一列（复选框列）添加全选复选框
                var checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.id = 'select-all';
                checkbox.className = 'header-checkbox';


                checkbox.addEventListener('click', function () {
                    if (checkbox.checked == true) {
                        var data = currentPageData;
                        for (var row = 0; row < data.length; row++) {
                            if (data[row].DataState == 1) {
                                data[row][0] = true;
                            }
                        }
                        hot.loadData(data);
                        checkbox.checked = true;

                    }
                    else {

                        var data = currentPageData;
                        for (var row = 0; row < data.length; row++) {
                            if (data[row].DataState == 1) {
                                data[row][0] = false;
                            }
                        }
                        hot.loadData(data);

                        checkbox.checked = false;
                    }

                    TH.innerHTML = ''; // 清空列头内容
                    TH.appendChild(checkbox);
                });
                TH.innerHTML = ''; // 清空列头内容
                TH.appendChild(checkbox);
            }
        },
        afterChange: function (changes, source) {

        },
        cells: function (row, col) {
            var cellProperties = {};

            // 0-锁定 2-打印 不能编辑
            if (currentPageData.length >= 1) {
                if (currentPageData[row].hasOwnProperty("DataState")) {
                    if (currentPageData[row].DataState == 0 || currentPageData[row].DataState == 2) {
                        cellProperties.readOnly = true;
                        cellProperties.renderer = function (instance, td, row, col, prop, value) {
                            Handsontable.renderers.TextRenderer.apply(this, arguments);
                            td.style.backgroundColor = '#f2f2f2'; // 只读变化背景
                        };
                    }
                }
            }

            if (col === 0) {
                cellProperties.width = 30;
            }
            if (col === 1) {
                cellProperties.width = 30; // ID 列
                cellProperties.readOnly = true;
                cellProperties.renderer = function (instance, td, row, col, prop, value) {
                    Handsontable.renderers.TextRenderer.apply(this, arguments);
                    td.style.backgroundColor = '#f2f2f2'; // 只读变化背景
                };
            }
            else if (col === 3) {
                cellProperties.readOnly = true;
                cellProperties.renderer = function (instance, td, row, col, prop, value) {
                    Handsontable.renderers.TextRenderer.apply(this, arguments);
                    td.style.backgroundColor = '#f2f2f2'; // 只读变化背景
                };
            }

            return cellProperties;
        }
    });


    // 获取选中数据的函数
    function getCheckedData() {
        var data = currentPageData;
        var checkedData = data.filter(function (row) {
            return row[0] === true; // 获取复选框选中的行
        });
        return checkedData;
    }
    function renderHeight() {

        if (pageSize < totalCount) {
            hot.updateSettings({
                height: pageSize * 23 + 42
            });
        } else {
            if (totalCount < 15) {
                hot.updateSettings({
                    height: 15 * 23.333 + 28
                });
            } else {
                hot.updateSettings({
                    height: totalCount * 23.333 + 28
                });
            }

        }

    }
    function renderPagination() {
        if (totalPages <= 1) {
            document.getElementById('pagination-container').style.display = 'none';
            return;
        }
        document.getElementById('pagination-container').style.display = 'block';

        var paginationHTML = '<li class="page-item ' + (currentPage === 1 ? 'disabled' : '') + '"><a class="page-link" href="#" data-page="' + (currentPage - 1) + '">‹</a></li>';

        var startPage = Math.max(1, currentPage - 3);
        var endPage = Math.min(totalPages, currentPage + 3);

        if (startPage > 1) {
            paginationHTML += '<li class="page-item"><a class="page-link" href="#" data-page="1">1</a></li>';
            if (startPage > 2) {
                paginationHTML += '<li class="page-item page-last-separator disabled"><a class="page-link" href="#">...</a></li>';
            }
        }

        for (var i = startPage; i <= endPage; i++) {
            if (i === currentPage) {
                paginationHTML += '<li class="page-item active"><a class="page-link" href="#">' + i + '</a></li>';
            } else {
                paginationHTML += '<li class="page-item"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>';
            }
        }

        if (endPage < totalPages) {
            if (endPage < totalPages - 1) {
                paginationHTML += '<li class="page-item page-last-separator disabled"><a class="page-link" href="#">...</a></li>';
            }
            paginationHTML += '<li class="page-item"><a class="page-link" href="#" data-page="' + totalPages + '">' + totalPages + '</a></li>';
        }

        paginationHTML += '<li class="page-item ' + (currentPage === totalPages ? 'disabled' : '') + '"><a class="page-link" href="#" data-page="' + (currentPage + 1) + '">›</a></li>';

        document.getElementById('pagination').innerHTML = paginationHTML;

        // 绑定点击事件
        var paginationItems = document.querySelectorAll('.page-item .page-link');
        paginationItems.forEach(function (item) {
            item.addEventListener('click', function (e) {
                e.preventDefault();
                var page = parseInt(this.getAttribute('data-page'));
                if (!isNaN(page) && page != currentPage) {
                    currentPage = page;
                    resetData();
                }
            });
        });
    }

    function renderPageInfo() {
        if (totalCount == 0) {
            currentPage = 0;
            startCount = 0;
            totalPages = 0;
            endCount = 0;
            $("#start-count").text(startCount);
            $("#end-count").text(endCount);
            $("#total-count").text(totalCount);

            //没有数据隐藏面板
            $("#pagination-info-Panel").hide();



            return;
        } else {

            //有数据显示面板
            $("#pagination-info-Panel").show();
        }

        //渲染分页
        startCount = (currentPage - 1) * pageSize + 1;
        endCount = currentPage * pageSize;
        $("#start-count").text(startCount);

        //结束的超过最大的 变成最大的
        if (endCount > totalCount) {
            endCount = totalCount;
        }
        $("#end-count").text(endCount);


    }

    function initExcel() {

    }
    //分页控件刷新数据

    function resetData() {
         

    }
    function filterNowData() {
 

        pageData = {
            "Total": 41,
            "Data": [
                {
                    "PrintDataId": "741619601002991616",
                    "BanknoteCount": "10",
                    "CoinCount": "50",
                    "CustomerName": "刘丽丽",
                    "CustomerTel": "18512361231",
                    "StampCount": "50",
                    "StartCode": "2400042324",
                    "EndCode": "2400042433",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-08-08 11:32:01",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-08-08 11:32:01",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "741619723371810816",
                    "Token": null
                },
                {
                    "PrintDataId": "741351318299348992",
                    "BanknoteCount": "90",
                    "CoinCount": "90",
                    "CustomerName": "陈志羽1",
                    "CustomerTel": "18512361231",
                    "StampCount": "90",
                    "StartCode": "2400042054",
                    "EndCode": "2400042323",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-08-07 17:46:04",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-08-07 17:46:04",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "741351468732256256",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "20",
                    "CoinCount": "20",
                    "CustomerName": "李丽丽",
                    "CustomerTel": "12234",
                    "StampCount": "20",
                    "StartCode": "2400041994",
                    "EndCode": "2400042053",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-08-01 09:20:09",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-08-01 09:20:09",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "739049824174739456",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "20",
                    "CoinCount": "0",
                    "CustomerName": "李丽丽",
                    "CustomerTel": "12345678910",
                    "StampCount": "0",
                    "StartCode": "2400041974",
                    "EndCode": "2400041993",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-31 14:32:44",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-31 14:32:44",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738766101000753152",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "20",
                    "CoinCount": "20",
                    "CustomerName": "李丽丽",
                    "CustomerTel": "12345678910",
                    "StampCount": "20",
                    "StartCode": "2400041914",
                    "EndCode": "2400041973",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-31 14:15:02",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-31 14:15:02",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738761647631372288",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "600",
                    "CoinCount": "600",
                    "CustomerName": "李四",
                    "CustomerTel": "16866666666",
                    "StampCount": "600",
                    "StartCode": "2400040114",
                    "EndCode": "2400041913",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-31 11:49:33",
                    "BaseModifierId": 736514881989120000,
                    "BaseCreateTime": "2024-07-31 11:49:33",
                    "BaseCreatorId": 736514881989120000,
                    "Id": "738725035966992384",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "10",
                    "CoinCount": "10",
                    "CustomerName": "李四",
                    "CustomerTel": "18512361231",
                    "StampCount": "10",
                    "StartCode": "2400040084",
                    "EndCode": "2400040113",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-31 10:18:03",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-31 10:18:03",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738702006541094912",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "10",
                    "CoinCount": "10",
                    "CustomerName": "LLL",
                    "CustomerTel": "13293397712",
                    "StampCount": "10",
                    "StartCode": "2400040054",
                    "EndCode": "2400040083",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-30 15:03:18",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-30 15:03:18",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738411406394658816",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "0",
                    "CoinCount": "0",
                    "CustomerName": "啦啦啦",
                    "CustomerTel": "16211123657",
                    "StampCount": "0",
                    "StartCode": "2400040054",
                    "EndCode": "2400040053",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-30 14:35:56",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-30 14:35:56",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738404517803986944",
                    "Token": null
                },
                {
                    "PrintDataId": "734051906673971200",
                    "BanknoteCount": "10",
                    "CoinCount": "10",
                    "CustomerName": "李丽丽",
                    "CustomerTel": "12345678910",
                    "StampCount": "10",
                    "StartCode": "2400040024",
                    "EndCode": "2400040053",
                    "BaseVersion": 0,
                    "BaseModifyTime": "2024-07-30 13:39:49",
                    "BaseModifierId": 16508640061130152,
                    "BaseCreateTime": "2024-07-30 13:39:49",
                    "BaseCreatorId": 16508640061130152,
                    "Id": "738390396874264576",
                    "Token": null
                }
            ],
            "Tag": 1,
            "Message": ""
        };
        console.log(pageData);
        filterPage = pageData;
        currentPageData = filterPage;
       
        // 加载新数据
        hot.loadData(currentPageData);
        // 重新渲染表格
        hot.render();
         


    }
    //暂存数据
    function saveTempData() {
        //只数据是编辑状态的数据
        var printData = getCheckedData();
        if (printData.length == 0) {
            ys.msgError("请选中要暂存的数据");
            return;
        }
        console.log(printData);
    } 
</script>

